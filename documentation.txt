- Linux compatibility

    - Install linux packages for sdl2:
            sdl2, sdl2_mixer, sdl2_ttf, sdl2_image
        the packages names might differ for other distributions.

    - Remove COM references from .csproj file and update .net Framework version to your
      version.

    - Change paths to linux paths: 
        Bootstrap.cs:63:            setupEnvironmentalVariables(baseDir + "\\" + "envar.cfg");
        Bootstrap.cs:64:            setup(baseDir + "\\" + DEFAULT_CONFIG);
        AssetManager.cs:27:         string[] bits = path.Split ("\\");

    - Change the comically large number of .Parent calls:
        Bootstrap.cs:61:            baseDir = Directory.GetParent(workDir).Parent.Parent.Parent.Parent.FullName;

    - Install/change font:
        my solution was to install the Calibri font in a Fonts folder in the
        base directory of the project.
            DisplayText.cs:177:         IntPtr font = loadFont("Fonts/calibri.ttf", size);


- Bug fixes
    - InputFramework now processes all event queue at every tick and has
      expected behaviour;

- Small changes
    
    - Added InputCodes
    
    - Added draw rectangles in Display and DisplaySDL

    - GameObject don't initialize automatically now. Necessary for netcode.

    - Added mouse collider (you jsut have to enable it)

- Network system

    - Added a whole system that manages all network communication
    - Independent of all other systems. You can still make a game that doesn't
      use any netcode.

    - NetworkGame and NetworkObject are extensions from Game and GameObject
      with usefull methods.
    - NetworkManager: manages all communication of the form 
      host -> multiple clients. The clients never communicate among them.
    - NetworkFramework: the actual handler of the messages.

    - Added the necessary code in Bootstrap to make it work.
    
